import { query } from './database.js';
import { hashPassword } from './auth.js';

// Dados dos usu√°rios padr√£o
const defaultUsers = [
  {
    name: 'Administrador',
    email: 'admin@siru.com',
    siape: '000000',
    password: 'admin123',
    role: 'admin'
  },
  {
    name: 'Jo√£o Silva',
    email: 'joao.silva@universidade.edu',
    siape: '123456',
    password: 'professor123',
    role: 'professor'
  },
  {
    name: 'Maria Santos',
    email: 'maria.santos@universidade.edu',
    siape: '654321',
    password: 'coordenador123',
    role: 'coordenador'
  },
  {
    name: 'Pedro Costa',
    email: 'pedro.costa@aluno.universidade.edu',
    siape: '111111',
    password: 'aluno123',
    role: 'aluno'
  },
  {
    name: 'Ana Oliveira',
    email: 'ana.oliveira@universidade.edu',
    siape: '222222',
    password: 'portaria123',
    role: 'portaria'
  },
  {
    name: 'Carlos Ferreira',
    email: 'carlos.ferreira@universidade.edu',
    siape: '333333',
    password: 'direcao123',
    role: 'direcao'
  },
  {
    name: 'Lucia Mendes',
    email: 'lucia.mendes@universidade.edu',
    siape: '444444',
    password: 'servidor123',
    role: 'servidor'
  }
];

// Dados das salas padr√£o
const defaultRooms = [
  {
    name: 'Audit√≥rio Principal',
    capacity: 200,
    equipment: ['projetor', 'som', 'microfone', 'ar-condicionado'],
    location: 'Bloco A - T√©rreo'
  },
  {
    name: 'Sala de Aula 101',
    capacity: 40,
    equipment: ['projetor', 'quadro-branco'],
    location: 'Bloco A - 1¬∫ Andar'
  },
  {
    name: 'Laborat√≥rio de Inform√°tica 1',
    capacity: 30,
    equipment: ['computadores', 'projetor', 'ar-condicionado'],
    location: 'Bloco B - 2¬∫ Andar'
  },
  {
    name: 'Sala de Reuni√µes',
    capacity: 12,
    equipment: ['tv', 'mesa-de-reuni√£o', 'ar-condicionado'],
    location: 'Bloco A - 3¬∫ Andar'
  },
  {
    name: 'Sala de Videoconfer√™ncia',
    capacity: 20,
    equipment: ['c√¢mera', 'microfone', 'tv', 'sistema-videoconfer√™ncia'],
    location: 'Bloco C - 1¬∫ Andar'
  }
];

// Fun√ß√£o para popular o banco com dados iniciais
export const seedDatabase = async () => {
  try {
    console.log('üå± Iniciando seed do banco de dados...');

    // Verificar se j√° existem usu√°rios
    const existingUsers = await query('SELECT COUNT(*) FROM users');
    if (existingUsers.rows[0].count > 0) {
      console.log('‚úÖ Usu√°rios j√° existem no banco. Seed n√£o necess√°rio.');
      return;
    }

    // Inserir usu√°rios padr√£o
    console.log('üë• Criando usu√°rios padr√£o...');
    for (const user of defaultUsers) {
      const hashedPassword = await hashPassword(user.password);
      await query(
        `INSERT INTO users (name, email, siape, password_hash, role) 
         VALUES ($1, $2, $3, $4, $5)`,
        [user.name, user.email, user.siape, hashedPassword, user.role]
      );
      console.log(`   ‚úì Usu√°rio criado: ${user.name} (${user.role})`);
    }

    // Inserir salas padr√£o
    console.log('üè¢ Criando salas padr√£o...');
    for (const room of defaultRooms) {
      await query(
        `INSERT INTO rooms (name, capacity, equipment, location) 
         VALUES ($1, $2, $3, $4)`,
        [room.name, room.capacity, room.equipment, room.location]
      );
      console.log(`   ‚úì Sala criada: ${room.name}`);
    }

    console.log('üéâ Seed do banco de dados conclu√≠do com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro durante o seed do banco:', error);
    throw error;
  }
};
